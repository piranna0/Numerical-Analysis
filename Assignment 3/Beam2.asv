function [d, condA] = Beam2(n)

% Set up two arrays
% j(1:n) = 1:n;
% j(n+1:2*n-1) = 2:n;
% j(2*n:3*n-3) = 3:n;
% 
% i(1:n) = 1:n;
% i(n+1:2*n-1) = 1:n-1;
% i(2*n:3*n-3) = 1:n-2;
% 
% s(1) = 9;
% s(2:n-2) = 6;
% s(n-1) = 5;
% s(n) = 1;
% s(n+1:2*n-2) = -4;
% s(2*n-1) = -2;
% s(2*n:3*n-3) = 1;

Bn = zeros(n, 5);
Bn(1:n-2, 1) = 1;
Bn(1:n-2, 2) = -4;
Bn(n-1, 2) = -2;
Bn(2:n+1, 4) = B(1:n-1, 2);
Bn(3:n+1, 5) = B(1:n-2, 1);
Bn(1:n-2, 3) = 6;
Bn(n-1 : n, 3) = [5, 1];
d = [-2, -1, 0, 1, 2];

A = 

triuAn = sparse([i j],[j i],[s s(n+1:end)],n,n)
full(triuAn)
% R = chol(A);
% Rt = R';
% 
% d = ones(n,1)/n^4;
% 
% d = Rt \ d;
% d = R \ d;
